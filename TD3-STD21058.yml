openapi: 3.0.1
info:
  title: STD21058
  version: 1.0.0
servers:
  - url: https://steven.io
tags:
  - name: Rooms
  - name: Films
  - name: Projections
  - name: Categories
paths:
  /rooms:
    get:
      tags:
        - Rooms
      operationId: getRoom
      description:  Get a room
      responses:
        200: 
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        404: 
          description: Not_found
  /rooms/{id}:
    get:
      tags:
        - Rooms
      description: get a specified room
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room' 
  /films:
    get:
      tags:
        - Films
      operationId: getFilm
      description: Get all Film
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad_request
        404:
          description: Not_found
    post:
      tags:
        - Films
      description: Add new film
      responses:
        201:
          description: Created 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/CreateFilm'
        405:
          description: Invalid request
    patch:
      tags:
        - Films
      description: Update a Film
      requestBody:
        description: |
          Possible updates on:
          * Tittle: change
          * Duration : change
          * Producer: change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Film'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Films
      summary: Delete a film
      operationId: deleteFilm
      responses:
        200:
          description: Return the ID of deleted film
        400:
          description: Invalid film
        404:
          description: Film not found
  /films/{id}:
    get:
      tags:
        - Films
      description: Get all Film
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad_request
        404:
          description: Not_found
    post:
      tags:
        - Films
      description: Add new film
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Created 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/CreateFilm'
        405:
          description: Invalid request
    patch:
      tags:
        - Films
      description: Update a Film
      parameters:
        - name: id
          in: path
          description: name that need to update
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          Possible updates on:
          * Tittle: change
          * Duration : change
          * Producer: change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Film'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Films
      summary: Delete a film
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the ID of deleted film
        400:
          description: Invalid film
        404:
          description: Film not found
  /projections:
    get:
      tags:
        - Projections
      description: Find a Projection
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
    post:
      tags:
        - Projections
      description: Add new projection
      responses:
        201:
          description: Created
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/CreateProjection'
    patch:
      tags:
        - Projections
      description: Update a projection
      requestBody:
        description: |
          Possible updates on:
          * Film: change
          * Salle : change
          * Hours: change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Projection'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Projections
      summary: Delete a projection
      responses:
        200:
          description: Return the ID of deleted projection
        400:
          description: Invalid projection
        404:
          description: Projection not found
  /projections/{id}:
    get:
      tags:
        - Projections
      description: Find a Projection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
    post:
      tags:
        - Projections
      description: Add new projection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Created
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/CreateProjection'
    patch:
      tags:
        - Projections
      description: Update a projection
      parameters:
        - name: id
          in: path
          description: name that need to update
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          Possible updates on:
          * Films: change
          * Salle : change
          * Hours : change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Projection'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Projections
      summary: Delete a projection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the ID of deleted projection
        400:
          description: Invalid projection
        404:
          description: Projection not found
  /projection/week/:
    get:
      tags: 
        - Projections 
      description: Get list of projection for a specified week
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date-time
          required: true
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/Week'
  /category:
    get: 
      tags:
        - Categories
      description: Find a film's category
      responses:
        200: 
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      description: Add new category to list
      responses:
        201:
          description: Created
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Category'
    patch:
      tags:
        - Categories
      description: Update a category
      requestBody:
        description: |
          Possible updates on:
          * id: change
          * name : change
          * Films : change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Categories
      summary: Delete a category
      responses:
        200:
          description: Return the ID of deleted category
        400:
          description: Invalid category
        404:
          description: Category not found
  /category/{id}:
    get: 
      tags:
        - Categories
      description: Find a film's category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200: 
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      description: Add new category to list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        201:
          description: Created
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Category'
    patch:
      tags:
        - Categories
      description: Update a category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          Possible updates on:
          * id: change
          * name : change
          * Films : change
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        400:
          description: Bad_request
    delete:
      tags:
        - Categories
      summary: Delete a category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the ID of deleted category
        400:
          description: Invalid category
        404:
          description: Category not found
components:
  schemas:
    CreateRoom:
      type: object
      properties:
        id:
          type: string
          example: 'A'
        Capacity:
          type: string
    Room:
      allOf:
        - $ref: '#/components/schemas/CreateRoom'
      type: object
      properties:
        id:
          type: string
          example: 'A' 
    Film:
      allOf:
        - $ref: '#/components/schemas/CreateFilm'
      type: object
      properties: 
        id:
          type: integer
    CreateFilm:
      type: object
      properties:
        title:
          type: string
          example: Pirate de Caraibes
        duration:
          type: string
        synopsis:
          type: string
        producer:
          type: string
        date:
          type: string
          format: date-time
    CreateProjection:
      allOf:
        - $ref: '#/components/schemas/Film'
        - $ref: '#/components/schemas/Room'
      type: object
      properties:
        hours:
          type: string
          format: date-time
    Projection:
      allOf:
        - $ref: '#/components/schemas/CreateProjection'
      type: object
      properties:
        id:
          type: integer
    CreateCategory:
      allOf: 
        - $ref: '#/components/schemas/Film'
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
    Category:
      allOf:
        - $ref: '#/components/schemas/CreateCategory'
      type: object
      properties:
        id:
          type: integer
    Week: 
      type: object
      properties:
        weekOf:
          type: string
          format: date-time
        Projection:
          type: array
          items:
            $ref: '#/components/schemas/Projection'